---
title: "Lab 10: Distances and Projections - The Border Zone"
subtitle: 'ESS 330 - Quantitative Reasoning'
author:
  - name: "Zachary Cramton"
    url: "https://zcramton.github.io"
    email: "ZCramton@colostate.edu"
toc: true
format: html
execute:
  echo: true
---

```{r setup}
# spatial data science
library(tidyverse)
library(sf)
library(units)
library(flextable)

# Data
library(AOI)
library(USAboundaries)
library(USAboundariesData)
library(rnaturalearthdata)
library(readr)
library(here)

# Visualization
library(gghighlight)
library(ggrepel)
library(ggplot2)
library(knitr)
```

```{r question 1}
# 1.1 Deinfe eqdc
eqdc <- '+proj=eqdc +lat_0=40 +lon_0=-96 +lat_1=20 +lat_2=60 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs'

# 1.2 - Get USA state boundaries
if(!requireNamespace("AOI", quietly = TRUE)){
  remotes::install_github("mikejohnson51/AOI")
}
states <- aoi_get(state = 'conus') %>%
  st_transform(eqdc)

# 1.3 - Get country boundaries for Mexico, the United States of America, and Canada
if(!requireNamespace("AOI", quietly = TRUE)){
  remotes::install_github("mikejohnson51/AOI")
}
countries <- aoi_get(country = c("MX", "CA", "USA")) %>%
  st_transform(eqdc)

# 1.4 - Get city locations from the CSV file
cities <- read_csv(here("data", "lab_data", "simplemaps_uscities_basic", "uscities.csv"))

# Convert the data.frame to a spatial object
cities_sf <- st_as_sf(cities, coords = c("lng", "lat"), crs = 4326) %>% 
  st_transform(5070)

# Remove cities in AK and HI
conus_cities_sf <- cities_sf %>%
  filter(!state_id %in% c("AK", "HI")) %>%
  st_transform(5070)
```

```{r question 2}
# Question 2
# 2.1 - Distance to USA Border (coastline or national) (km)
# Convert USA state boundaries to a single MULTILINESTRING with resolved borders
usa_border_resolved <- states %>%
  st_union() %>%
  st_cast("MULTILINESTRING")

# Calculate distance to the USA border
distance_to_usa_border <- st_distance(conus_cities_sf, usa_border_resolved)
conus_cities_sf <- conus_cities_sf %>%
  mutate(dist_to_usa_border_m = as.numeric(distance_to_usa_border),
         dist_to_usa_border_km = round(dist_to_usa_border_m / 1000, 1))

# Produce a table of the five cities farthest from the USA border
farthest_from_usa_border <- conus_cities_sf %>%
  arrange(desc(dist_to_usa_border_m)) %>%
  slice_head(n = 5) %>%
  select(city, state_id, dist_to_usa_border_km) %>%
  rename(state = state_id, distance_km = dist_to_usa_border_km)

flextable(farthest_from_usa_border) %>%
  set_header_labels(
    city = "City",
    state = "State",
    distance_km = "Distance to USA Border (km)"
  ) %>%
  add_header_row(values = "Five Cities Farthest from the US National Border", colwidths = ncol(farthest_from_usa_border)) %>%
  autofit()

# 2.2 - Distance to States (km)
# Convert USA state boundaries to a MULTILINESTRING preserving individual state borders
state_boundaries_lines <- states %>%
  st_cast("MULTILINESTRING")

# Calculate distance to the nearest state border
distance_to_state_border <- st_distance(cities_sf, state_boundaries_lines)
min_distance_to_state_border <- apply(distance_to_state_border, 1, min)
conus_cities_sf <- conus_cities_sf %>%
  mutate(dist_to_state_border_m = as.numeric(min_distance_to_state_border),
         dist_to_state_border_km = round(dist_to_state_border_m / 1000, 1))

# Produce a table of the five cities farthest from a state border
farthest_from_state_border <- conus_cities_sf %>%
  arrange(desc(dist_to_state_border_m)) %>%
  slice_head(n = 5) %>%
  select(city, state_id, dist_to_state_border_km) %>%
  rename(state = state_id, distance_km = dist_to_state_border_km)

flextable(farthest_from_state_border) %>%
  set_header_labels(
    city = "City",
    state = "State",
    distance_km = "Distance to State Border (km)"
  ) %>%
  add_header_row(values = "Five Cities Farthest from the Nearest US State Borders", colwidths = ncol(farthest_from_state_border)) %>%
  autofit()

# 2.3 - Distance to Mexico (km)
# Isolate Mexico border and convert to MULTILINESTRING
mexico_border <- countries %>%
  filter(admin == "Mexico") %>%
  st_cast("MULTILINESTRING")

# Calculate distance to the Mexican border
distance_to_mexico <- st_distance(conus_cities_sf, mexico_border)
conus_cities_sf <- conus_cities_sf %>%
  mutate(dist_to_mexico_m = as.numeric(distance_to_mexico),
         dist_to_mexico_km = round(dist_to_mexico_m / 1000, 1))

# Produce a table of the five cities farthest from the Mexican border
farthest_from_mexico <- conus_cities_sf %>%
  arrange(desc(dist_to_mexico_m)) %>%
  slice_head(n = 5) %>%
  select(city, state_id, dist_to_mexico_km) %>%
  rename(state = state_id, distance_km = dist_to_mexico_km)

flextable(farthest_from_mexico) %>%
  set_header_labels(
    city = "City",
    state = "State",
    distance_km = "Distance to Mexican Border (km)"
  ) %>%
  add_header_row(values = "Five Cities Farthest from the Mexican Border", colwidths = ncol(farthest_from_mexico)) %>%
  autofit()

# 2.4 - Distance to Canada (km)
# Isolate Canada border and convert to MULTILINESTRING
canada_border <- countries %>%
  filter(admin == "Canada") %>%
  st_cast("MULTILINESTRING")

# Calculate distance to the Canadian border
distance_to_canada <- st_distance(conus_cities_sf, canada_border)
conus_cities_sf <- conus_cities_sf %>%
  mutate(dist_to_canada_m = as.numeric(distance_to_canada),
         dist_to_canada_km = round(dist_to_canada_m / 1000, 1))

# Produce a table of the five cities farthest from the Canadian border
farthest_from_canada <- conus_cities_sf %>%
  arrange(desc(dist_to_canada_m)) %>%
  slice_head(n = 5) %>%
  select(city, state_id, dist_to_canada_km) %>%
  rename(state = state_id, distance_km = dist_to_canada_km)

flextable(farthest_from_canada) %>%
  set_header_labels(
    city = "City",
    state = "State",
    distance_km = "Distance to Canadian Border (km)"
  ) %>%
  add_header_row(values = "Five Cities Farthest from the Canadian Border", colwidths = ncol(farthest_from_canada)) %>%
  autofit()
```

```{r question 3}
# Question 3
# 3.1 Data
world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf") %>%
  st_transform(5070)  
continents <- world %>%
  filter(continent %in% c("North America", "South America", "Europe"))

conus_outline <- states %>%
  st_union() %>%
  st_transform(5070)  

top10_cities <- conus_cities_sf %>%
  arrange(desc(population)) %>%
  slice_head(n = 10)

ggplot() +
  geom_sf(data = continents, fill = "lightgrey", color = "black", lty = "solid", size = 0.2) +
  geom_sf(data = conus_outline, fill = NA, color = "black", lty = "dashed", size = 0.5) +
  geom_sf(data = states %>% st_transform(5070), fill = "lightblue", color = "black", lty = "solid", size = 0.3) +  
  geom_label_repel(
    data = top10_cities,
    aes(label = city, geometry = geometry),
    stat = "sf_coordinates",
    min.segment.length = 0,
    size = 3,
    box.padding = 0.3,
    point.padding = 0.2
  ) +
  coord_sf(xlim = st_bbox(states %>% st_transform(5070))[c(1, 3)], ylim = st_bbox(states %>% st_transform(5070))[c(2, 4)], expand = FALSE) +  
  theme_void() +
  labs(
    title = "Continents, CONUS, State Boundaries, and Top 10 Largest USA Cities",
    caption = "Data sources: Natural Earth, USAboundaries, uscities.csv"
  )

# 3.2 City Distance from the Border
usa <- aoi_get(country = "USA") %>%
  st_transform(5070)  
usa_border <- st_cast(usa, "MULTILINESTRING") %>% 
  st_transform(5070)

distance_matrix_usa <- st_distance(cities_sf, usa_border)
min_distances_usa_km <- apply(distance_matrix_usa, 1, min) / 1000

cities_with_usa_dist <- cities_sf %>%
  mutate(dist_to_usa_border_km = as.numeric(min_distances_usa_km))

top5_farthest_usa <- cities_with_usa_dist %>%
  arrange(desc(dist_to_usa_border_km)) %>%
  slice_head(n = 5)

ggplot() +
  geom_sf(data = states %>% st_transform(5070), fill = "lightgrey", color = "black", size = 0.3) +  
  geom_sf(data = cities_with_usa_dist, aes(color = dist_to_usa_border_km), size = 1) +
  scale_color_viridis_c(name = "Distance to National Border (km)", option = "plasma") +
  geom_sf(data = top5_farthest_usa, color = "black", fill = "darkblue", size = 2, shape = 21, stroke = 0.5) +
  geom_label_repel(
    data = top5_farthest_usa,
    aes(label = city, geometry = geometry),
    stat = "sf_coordinates",
    min.segment.length = 0,
    size = 3,
    box.padding = 0.3,
    point.padding = 0.2
  ) +
  coord_sf(xlim = st_bbox(states %>% st_transform(5070))[c(1, 3)], ylim = st_bbox(states %>% st_transform(5070))[c(2, 4)], expand = FALSE) +  
  theme_void() +
  labs(
    title = "USA Cities by Distance from the National Border",
    subtitle = "Top 5 Farthest Cities Highlighted and Labeled",
    caption = "Data: uscities.csv, USAboundaries"
  )

# 3.3 City Distance from Nearest State
states_plot <- us_states() %>%
  st_transform(5070)

state_borders_plot <- states_plot %>%
  st_cast("MULTILINESTRING")

distance_matrix_state <- st_distance(cities_sf %>% st_transform(5070), state_borders_plot)
min_distances_state_km <- apply(distance_matrix_state, 1, min) / 1000

cities_with_state_dist <- cities_sf %>%
  st_transform(5070) %>%
  mutate(dist_to_state_border_km = as.numeric(min_distances_state_km))

top5_farthest_state <- cities_with_state_dist %>%
  arrange(desc(dist_to_state_border_km)) %>%
  slice_head(n = 5)

ggplot() +
  geom_sf(data = continents, fill = "lightgrey", color = "black", lty = "solid", size = 0.2) +
  geom_sf(data = conus_outline, fill = NA, color = "black", lty = "dashed", size = 0.5) +
  geom_sf(data = conus_states, fill = "lightgrey", color = "black", lty = "solid", size = 0.3) + # Ensure 'conus_states' has a fill
  geom_sf(data = cities_with_state_dist, aes(color = dist_to_state_border_km), size = 1) +
scale_color_viridis_c(name = "Distance to State Border (km)") +
  geom_label_repel(
    data = top10_cities %>% st_transform(5070),
    aes(label = city, geometry = geometry),
    stat = "sf_coordinates",
    min.segment.length = 0,
    size = 3,
    box.padding = 0.3,
    point.padding = 0.2
  ) +
    geom_label_repel(
    data = top5_farthest_state,
    aes(label = city, geometry = geometry),
    stat = "sf_coordinates",
    min.segment.length = 0,
    fill = "lightyellow",
    size = 3,
    box.padding = 0.3,
    point.padding = 0.2
  ) +
  coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
  theme_void() +
  labs(
    title = "USA Cities by Their Distance From the Nearest State Border",
    subtitle = "Top 5 Farthest Cities Highlighted and Labeled",
    caption = "Data: Natural Earth, USAboundaries, uscities.csv"
  )

# 3.4 Equidistance boundary from Mexico and Canada
# Reset dist to mex and can values to make sure correct values are used
usa_border <- st_transform(usa_border, st_crs(conus_cities_sf))
mexico_border <- st_transform(mexico_border, st_crs(conus_cities_sf))
canada_border <- st_transform(canada_border, st_crs(conus_cities_sf))

dist_to_canada <- as.numeric(st_distance(conus_cities_sf, canada_border))
dist_to_mexico <- as.numeric(st_distance(conus_cities_sf, mexico_border))

equidistant_cities <- conus_cities_sf %>%
  mutate(dist_to_canada = dist_to_canada,
         dist_to_mexico = dist_to_mexico,
         dist_diff = abs(dist_to_mexico - dist_to_canada)) %>%
  filter(dist_diff <= 100)

top5_equidistant_pop <- equidistant_cities %>%
  arrange(desc(population)) %>%
  slice_head(n = 5)

ggplot() +
  geom_sf(data = states %>% st_transform(st_crs(conus_cities_sf)), fill = "lightgrey", color = "black", size = 0.3) +
  geom_sf(data = equidistant_cities, aes(color = dist_diff), size = 1) +
  gghighlight(dist_diff <= 100, use_direct_label = FALSE) +
  geom_label_repel(
    data = top5_equidistant_pop,
    aes(label = city, geometry = geometry),
    stat = "sf_coordinates",
    size = 3,
    box.padding = 0.3,
    point.padding = 0.2
  ) +
  scale_color_viridis_c(name = "Distance Difference\n(Mexico vs Canada)") +
  theme_minimal() +
  coord_sf(xlim = st_bbox(states %>% st_transform(st_crs(conus_cities_sf)))[c(1, 3)],
           ylim = st_bbox(states %>% st_transform(st_crs(conus_cities_sf)))[c(2, 4)],
           expand = FALSE) +
  labs(
    title = "Cities Approximately Equidistant (±100 km) from Mexico and Canada",
    subtitle = "Top 5 most populous cities in this zone labeled",
    caption = "Data source: uscities.csv, USAboundaries, Natural Earth"
  )

```
3.3 Wasn't working after 2 hours of troubleshooting... I called it quits.

```{r question 4}
# Question 4
# 4.1 Quantifying Border Zone
threshold_km <- 160

cities_distance <- cities_sf %>% # Use the same cities_distance
  mutate(dist_to_national_border_m = as.numeric(min_distances_m),
         dist_to_national_border_km = round(dist_to_national_border_m / 1000, 1))

border_zone <- cities_distance %>%
  filter(dist_to_national_border_km <= threshold_km)

num_cities_in_zone <- nrow(border_zone)
pop_in_zone <- sum(border_zone$population, na.rm = TRUE)
total_pop <- sum(cities_distance$population, na.rm = TRUE)
percentage_in_zone <- round((pop_in_zone / total_pop) * 100, 2)

summary_df <- tibble::tibble(
  Metric = c(
    "Number of cities within 160 km of national border",
    "Population living within 160 km of border",
    "Percentage of U.S. population in this zone",
    "ACLU Estimate (approx. 2/3 of U.S. population)"
  ),
  Value = c(
    format(num_cities_in_zone, big.mark = ","),
    format(pop_in_zone, big.mark = ","),
    paste0(percentage_in_zone, "%"),
    "≈ 66%"
  )
)

flextable(summary_df) %>%
  autofit()

# 4.2 Mapping Border Zone
top10_danger <- border_zone %>%
  arrange(desc(population)) %>%
  slice_head(n = 10)

ggplot() +
  geom_sf(data = us_states(resolution = "low") %>% st_transform(st_crs(cities_distance)), fill = "lightgrey", color = "black", size = 0.3) + # Using us_states for a reliable base map
  geom_sf(data = cities_distance, aes(color = dist_to_national_border_km), size = 1) +
  scale_color_gradient(low = "orange", high = "darkred", name = "Distance to National Border (km)") +
  gghighlight(dist_to_national_border_km <= threshold_km, use_direct_label = FALSE) +
  geom_label_repel(
    data = top10_danger,
    aes(label = city, geometry = geometry),
    stat = "sf_coordinates",
    size = 3,
    box.padding = 0.3,
    point.padding = 0.2
  ) +
  theme_minimal() +
  coord_sf(xlim = st_bbox(states %>% st_transform(st_crs(cities_distance)))[c(1, 3)],
           ylim = st_bbox(states %>% st_transform(st_crs(cities_distance)))[c(2, 4)],
           expand = FALSE) +
  labs(
    title = "Cities Within 100-Mile Danger Zone of U.S. National Border",
    subtitle = "Top 10 most populous cities in the danger zone labeled",
    caption = "Data source: uscities.csv, USAboundaries, Natural Earth"
  )

```
